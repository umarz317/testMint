{"ast":null,"code":"var _jsxFileName = \"/Users/umar/Desktop/dapper-main/src/components/Showcase.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport abi from \"../constants/abi.json\";\nimport address from \"../constants/address.json\";\nimport INFURA_ENDPOINT from \"./config\";\nimport Web3 from 'web3';\n// eslint-disable-next-line\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new ethers.providers.Web3Provider(new Web3.providers.HttpProvider(INFURA_ENDPOINT));\nconst Showcase = props => {\n  _s();\n  const [counter, setCounter] = useState(5);\n\n  /* eslint-disable */\n  const [account, setAccount] = useState(\"\");\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [connected, setConnected] = useState(\"...\");\n  useEffect(() => {\n    connectWallet();\n  }, []);\n  /* eslint-enable */\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      if (window.ethereum.networkVersion != null) {\n        console.log(window.ethereum.networkVersion);\n        if (!(window.ethereum.networkVersion === \"5\")) {\n          alert(\"Switch your network to Goreli\");\n          return;\n        }\n      }\n      if (!account) {\n        // Only connect wallet if account is not set\n        window.ethereum.request({\n          method: 'eth_requestAccounts'\n        }).then(res => {\n          if (res.length > 0) {\n            accountChanged(res[0]);\n          }\n        });\n      }\n    } else {\n      loadEthersProperties();\n    }\n  };\n  const accountChanged = newAcc => {\n    setAccount(newAcc);\n    setConnected(true);\n    loadEthersProperties();\n  };\n  const loadEthersProperties = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(address.address, abi, tempSigner);\n    setContract(tempContract);\n  };\n  const mint = async () => {\n    try {\n      console.log(contract);\n      await contract.mint(counter, {\n        value: ethers.utils.parseEther((counter * 0.002).toString())\n      });\n    } catch (err) {\n      alert(`A problem happened during mint.\\n${err.reason === undefined ? err.message : err.reason}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"showcase font\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Connected: \", connect]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      className: \"mint-container flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mintInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mintCount\",\n            onClick: () => {\n              setCounter(counter - 1);\n              if (counter <= 1) {\n                setCounter(1);\n              }\n            },\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mintCount\",\n            style: {\n              fontWeight: 'bolder',\n              marginLeft: '20px'\n            },\n            children: [\" \", counter, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: '15px'\n            },\n            className: \"mintCount\",\n            onClick: () => setCounter(counter + 1),\n            children: \" + \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mint-button\",\n          onClick: mint,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Showcase, \"LKOCLwJXpjbLvCBcUISrgLJJINc=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["useState","useEffect","ethers","abi","address","INFURA_ENDPOINT","Web3","jsxDEV","_jsxDEV","provider","providers","Web3Provider","HttpProvider","Showcase","props","_s","counter","setCounter","account","setAccount","setProvider","signer","setSigner","contract","setContract","connected","setConnected","connectWallet","window","ethereum","networkVersion","console","log","alert","request","method","then","res","length","accountChanged","loadEthersProperties","newAcc","tempProvider","tempSigner","getSigner","tempContract","Contract","mint","value","utils","parseEther","toString","err","reason","undefined","message","className","children","style","marginTop","textAlign","connect","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontWeight","marginLeft","_c","$RefreshReg$"],"sources":["/Users/umar/Desktop/dapper-main/src/components/Showcase.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport abi from \"../constants/abi.json\"\r\nimport address from \"../constants/address.json\"\r\nimport INFURA_ENDPOINT from \"./config\";\r\nimport Web3 from 'web3';\r\n// eslint-disable-next-line\r\nconst provider = new ethers.providers.Web3Provider(new Web3.providers.HttpProvider(INFURA_ENDPOINT));\r\n\r\nconst Showcase = (props) => {\r\n\r\n  const [counter, setCounter] = useState(5);\r\n\r\n  /* eslint-disable */\r\n  const [account, setAccount] = useState(\"\")\r\n\r\n  const [provider, setProvider] = useState(null)\r\n  const [signer, setSigner] = useState(null)\r\n\r\n  const [contract, setContract] = useState(null)\r\n\r\n  const [connected,setConnected] = useState(\"...\")\r\n\r\n  useEffect(() => {\r\n    connectWallet()\r\n  }, [])\r\n/* eslint-enable */\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    if (window.ethereum.networkVersion != null) {\r\n      console.log(window.ethereum.networkVersion)\r\n      if (!(window.ethereum.networkVersion === \"5\")) {\r\n        alert(\"Switch your network to Goreli\")\r\n        return\r\n      }\r\n    }\r\n\r\n    if (!account) { // Only connect wallet if account is not set\r\n      window.ethereum.request({ method: 'eth_requestAccounts' }).then((res) => {\r\n        if (res.length > 0) {\r\n          accountChanged(res[0])\r\n        } \r\n      })\r\n    }\r\n\r\n  } else {\r\n    loadEthersProperties()\r\n  }\r\n}\r\n\r\n  const accountChanged = (newAcc) => {\r\n    setAccount(newAcc)\r\n    setConnected(true)\r\n    loadEthersProperties()\r\n  }\r\n\r\n  const loadEthersProperties = () => {\r\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum)\r\n    setProvider(tempProvider)\r\n\r\n    let tempSigner = tempProvider.getSigner()\r\n    setSigner(tempSigner)\r\n\r\n    let tempContract = new ethers.Contract(address.address, abi, tempSigner)\r\n    setContract(tempContract)\r\n  }\r\n\r\n  const mint = async () => {\r\n    try {\r\n      console.log(contract)\r\n      await contract.mint(counter, { value: ethers.utils.parseEther((counter * 0.002).toString()) })\r\n     \r\n    } catch (err) {\r\n      alert(`A problem happened during mint.\\n${err.reason === undefined ? err.message : err.reason}`)\r\n    }\r\n  }\r\n\r\n\r\n     \r\n    \r\n  \r\n\r\n  return (\r\n    <section className=\"showcase font\">\r\n      <div style={{marginTop:'20px',textAlign:'center'}}>\r\n      <h1>Connected: {connect}</h1>\r\n      </div>\r\n          <div style={{marginTop:'10px'}} className=\"mint-container flex\">\r\n            <div style={{textAlign:'center'}}>\r\n              <div className=\"mintInput\">\r\n                <button className=\"mintCount\"\r\n                  onClick={() => {\r\n                    setCounter(counter - 1);\r\n                    if (counter <= 1) {\r\n                      setCounter(1);\r\n                    }\r\n                  }}\r\n                >\r\n                  -\r\n                </button>\r\n                <span  className=\"mintCount\" style={{fontWeight:'bolder',marginLeft:'20px'}}> {counter} </span>\r\n                <button style={{marginLeft:'15px'}} className=\"mintCount\" onClick={() => setCounter(counter + 1)}> + </button>\r\n              </div>\r\n\r\n              <button className=\"mint-button\" onClick={mint}>Mint</button>\r\n\r\n            </div>\r\n          </div>\r\n      \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}