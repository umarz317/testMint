{"ast":null,"code":"var _jsxFileName = \"/Users/umar/Desktop/dapper-main/src/components/Wallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wallet = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [balance, setBalance] = useState(\"\");\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      if (!(window.ethereum.networkVersion === \"5\")) {\n        alert(\"Switch your network to Mainnet\");\n        return;\n      }\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        const balance = await provider.getBalance(address);\n        setBalance(ethers.utils.formatEther(balance));\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      alert(\"Please install MetaMask\");\n    }\n  };\n  useEffect(() => {\n    if (account) {\n      return;\n    }\n    connectWallet();\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet\",\n    children: account ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Balance: \", balance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Wallet, \"vzAH533fE8TeTs4nNAPZSY/WAac=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Wallet","_s","account","setAccount","balance","setBalance","connectWallet","window","ethereum","networkVersion","alert","provider","providers","Web3Provider","request","method","signer","getSigner","address","getAddress","getBalance","utils","formatEther","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/umar/Desktop/dapper-main/src/components/Wallet.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\n\n\n\nconst Wallet = () => {\n  const [account, setAccount] = useState(\"\");\n  const [balance, setBalance] = useState(\"\");\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      if (!(window.ethereum.networkVersion === \"5\")) {\n        alert(\"Switch your network to Mainnet\")\n        return\n      }\n\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n\n        const balance = await provider.getBalance(address);\n        setBalance(ethers.utils.formatEther(balance));\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      alert(\"Please install MetaMask\");\n    }\n  };\n\n  useEffect(() => {\n    if (account) {\n      return;\n    }\n  \n    connectWallet();\n  }, [account]);\n  \n\n  return (\n    <div className=\"wallet\">\n      {account ? (\n        <div>\n          <p>Account: {account}</p>\n          <p>Balance: {balance} ETH</p>\n        </div>\n      ) : (\n        <button onClick={connectWallet}></button>\n      )}\n    </div>\n  );\n};\n\nexport default Wallet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKhC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI,EAAED,MAAM,CAACC,QAAQ,CAACC,cAAc,KAAK,GAAG,CAAC,EAAE;QAC7CC,KAAK,CAAC,gCAAgC,CAAC;QACvC;MACF;MAEA,IAAI;QACF,MAAMC,QAAQ,GAAG,IAAId,MAAM,CAACe,SAAS,CAACC,YAAY,CAACN,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMD,MAAM,CAACC,QAAQ,CAACM,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QAChE,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAS,EAAE;QACnC,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,UAAU,EAAE;QACzChB,UAAU,CAACe,OAAO,CAAC;QAEnB,MAAMd,OAAO,GAAG,MAAMO,QAAQ,CAACS,UAAU,CAACF,OAAO,CAAC;QAClDb,UAAU,CAACR,MAAM,CAACwB,KAAK,CAACC,WAAW,CAAClB,OAAO,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC,MAAM;MACLb,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIM,OAAO,EAAE;MACX;IACF;IAEAI,aAAa,EAAE;EACjB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAGb,oBACEH,OAAA;IAAK0B,SAAS,EAAC,QAAQ;IAAAC,QAAA,EACpBxB,OAAO,gBACNH,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,GAAG,WAAS,EAACxB,OAAO;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzB/B,OAAA;QAAA2B,QAAA,GAAG,WAAS,EAACtB,OAAO,EAAC,MAAI;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,gBAEN/B,OAAA;MAAQgC,OAAO,EAAEzB;IAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAC7B,EAAA,CAjDID,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}